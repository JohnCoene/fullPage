% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fullPage.R
\name{fullPage}
\alias{fullPage}
\title{Setup fullPage}
\usage{
fullPage(..., opts = NULL, menu = NULL)
}
\arguments{
\item{...}{any element.}

\item{opts}{a list of options, see details.}

\item{menu}{named vector of menu links.}
}
\description{
Create a fullpage.
}
\details{
Valid \code{opts}:
\itemize{
  \item{\code{lockAnchors}}
  \item{\code{navigation}}
  \item{\code{navigationPosition}}
  \item{\code{showActiveTooltip}}
  \item{\code{slidesNavigation}}
  \item{\code{slidesNavPosition}}
  \item{\code{scrollingSpeed}}
  \item{\code{autoScrolling}}
  \item{\code{fitToSection}}
  \item{\code{fitToSectionDelay}}
  \item{\code{scrollBar}}
  \item{\code{easing}}
  \item{\code{easingcss3}}
  \item{\code{css3}}
  \item{\code{loopBottom}}
  \item{\code{loopTop}}
  \item{\code{loopHorizontal}}
  \item{\code{continuousVertical}}
  \item{\code{continuousHorizontal}}
  \item{\code{scrollHorizontally}}
  \item{\code{interlockedSlides}}
  \item{\code{dragAndMove}}
  \item{\code{offsetSections}}
  \item{\code{resetSliders}}
  \item{\code{fadingEffect}}
  \item{\code{normalScrollElements}}
  \item{\code{scrollOverflow}}
  \item{\code{scrollOverflowReset}}
  \item{\code{scrollOverflowOptions}}
  \item{\code{touchSensitivity}}
  \item{\code{normalScrollElementTouchThreshold}}
  \item{\code{bigSectionsDestination}}
  \item{\code{keyboardScrolling}}
  \item{\code{animateAnchor}}
  \item{\code{recordHistory}}
  \item{\code{controlArrows}}
  \item{\code{verticalCentered}}
  \item{\code{sectionsColor}}
  \item{\code{paddingTop}}
  \item{\code{paddingBottom}}
  \item{\code{responsiveWidth}}
  \item{\code{responsiveHeight}}
  \item{\code{responsiveSlides}}
  \item{\code{parallax}}
  \item{\code{parallaxOptions}}
  \item{\code{lazyLoading}}
}
}
\examples{
\dontrun{
library(shiny)

options <- list(
  sectionsColor = c('#f2f2f2', '#4BBFC3', '#7BAABE'),
  parallax = TRUE
)

ui <- fullPage(
  menu = c("Full Page" = "link1",
           "Sections" = "link2",
           "Slides" = "section3",
           "backgrounds" = "section4",
           "Background Slides" = "section5"),
  opts = options,
  fullSection(
    center = TRUE,
    menu = "link1",
    tags$h1("fullPage.js meets Shiny")
  ),
  fullSection(
    menu = "link2",
    fullContainer(
      fullRow(
        fullColumn(
          h3("Column 1"),
          selectInput(
          "dd",
          "data points",
          choices = c(10, 20, 30)
          )
        ),
        fullColumn(
          plotOutput("hist")
        ),
        fullColumn(
          plotOutput("plot")
        )
      )
    )
  ),
  fullSection(
    menu = "section3",
    fullSlide(
      fullContainer(
        center = TRUE,
        h3("With container"),
        plotOutput("slideplot2"),
        shiny::verbatimTextOutput("containerCode")
      )
    ),
    fullSlide(
      center = TRUE,
      h3("Without container"),
      plotOutput("slideplot1")
    )
  ),
  fullSectionPlot(
    menu = "section4",
    center = TRUE,
    "fp",
    h3("Background plots"),
    fullContainer(
      sliderInput(
        "fpInput",
        label = "Input",
        min = 10,
        max = 100,
        value = 74
      )
    )
  ),
  fullSection(
    menu = "section5",
    fullSlidePlot(
      "slideSectionPlot1",
      center = TRUE,
      h1("Slide background plot")
    ),
    fullSlidePlot(
      "slideSectionPlot2"
    )
  )
)

server <- function(input, output){

  output$plot <- renderPlot({
    hist(rnorm(input$dd, 1, 10))
  })

  output$hist <- renderPlot({
    hist(rnorm(input$dd, 1, 10))
  })

  output$slideplot1 <- renderPlot({
    plot(mtcars$mpg, mtcars$drat)
  })

  output$slideplot2 <- renderPlot({
    plot(mtcars$wt, mtcars$mpg)
  })

  output$fp <- renderPlot({
    par(bg="gray")
    hist(rnorm(input$fpInput, 1, 10))
  })

  output$containerCode <- renderText({
    "fullSlide(
      fullContainer(...)
    )"
  })

  output$slideSectionPlot1 <- renderPlot({
    par(bg="gray")
    hist(rnorm(50, 1, 20))
  })

  output$slideSectionPlot2 <- renderPlot({
    par(bg="gray")
    hist(rnorm(50, 1, 25))
  })
}

shinyApp(ui, server)
}

}
