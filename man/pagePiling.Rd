% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pagePiling.R
\name{pagePiling}
\alias{pagePiling}
\title{Set page piling}
\usage{
pagePiling(..., sections.color, opts = NULL, menu = NULL)
}
\arguments{
\item{...}{any element.}

\item{sections.color}{character vector, i.e.: \code{c("blue", "red")}}

\item{opts}{list of options, see details.}

\item{menu}{menu links as named vector.}
}
\description{
Set page piling
}
\details{
\itemize{
  \item{\code{direction} - takes \code{vertical} or \code{horizontal}}
  \item{\code{verticalCentered} - boolean}
  \item{\code{scrollingSpeed} - scrolling transitions in milliseconds, numeric value i.e.: \code{700}}
  \item{\code{easing} - character string, \href{jQuery UI}{http://jqueryui.com/} easing, i.e.: \code{easeInQuart}}
  \item{\code{loopBottom} - boolean}
  \item{\code{loopTop} - boolean}
  \item{\code{css3} - boolean}
  \item{\code{navigation} - boolean, show navigation bar}
  \item{\code{touchSensitivity} - numeric value}
  \item{\code{keyboardScrolling} - boolean}
  \item{\code{animateAnchor} - boolean, whether to use anchors}
}
}
\examples{
if(interactive()){
library(shiny)

options <- list(
  loopBottom = TRUE
)

ui <- pagePiling(
  sections.color = c('#f2f2f2', '#2C3E50', '#39C'),
  opts = options,
  menu = c("Section 1" = "section1",
           "Piling" = "section2",
           "Plots" = "section3",
           "Layers" = "section4"),
  pageSection(
    center = TRUE,
    menu = "section1",
    h1("Page piling")
  ),
  pageSection(
    menu = "section2",
    center = TRUE,
    h1("Section 2")
  ),
  pageSectionPlot(
    "plot",
    center = TRUE,
    menu = "section3",
    h1("Plot background")
  ),
  pageSectionPlot(
    "plot2",
    center = TRUE,
    menu = "section4",
    pageContainer(
      h1("Layer anything"),
      sliderInput(
        "bins",
        "Data Points",
        min = 100,
        max = 500,
        step = 25,
        value = 200
      )
    )
  )
)

server <- function(input, output){

  output$plot <- renderPlot({
    par(bg = "grey60")
    plot(mtcars$wt, mtcars$mpg)
  })

  output$plot2 <- renderPlot({
    par(bg = "grey80")
    hist(rnorm(input$bins, 100, 250))
  })
}

shinyApp(ui, server)
}

}
