% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multipage.R
\name{multiPage}
\alias{multiPage}
\alias{multiSection}
\title{Setup a multiscroll page}
\usage{
multiPage(..., opts = NULL, menu = NULL)

multiSection(..., menu = NULL, center = FALSE)
}
\arguments{
\item{...}{any element.}

\item{opts}{a list of options, see details.}

\item{menu}{named vector of menu links.}
}
\description{
Setup a multiscroll page
}
\details{
use the \code{menu} parameter on one "side" (\code{multiLeft} or \code{multiRight}) only;
No need to specify it twice, it would breaks things as it is a \code{CSS} id, see examples.

Valid \code{opts}:
\itemize{
  \item{\code{verticalCentered} - boolean}
  \item{\code{scrollingSpeed} - numeric}
  \item{\code{easing} - character string, \href{jQuery UI}{http://jqueryui.com/} easing, i.e. 'easeInQuart'}
  \item{\code{sectionsColor} - character vector, i.e.: \code{c("blue", "red")}}
  \item{\code{navigation} - boolean}
  \item{\code{navigationPosition} - character string, takes \code{none}, \code{left}, or \code{right}}
  \item{\code{navigationColor} - character string, i.e.:"black"}
  \item{\code{navigationTooltips} - character vector, i.e.: \code{c("Tooltip 1", "Tooltip 2")}}
  \item{\code{loopBottom} - boolean}
  \item{\code{loopTop} - boolean}
  \item{\code{css3} - boolnean}
  \item{\code{paddingTop} - numeric, i.e.: 0}
  \item{\code{paddingBottom} - numeric, i.e.: 0}
  \item{\code{keyboardScrolling} boolean}
  \item{\code{touchSensitivity} - numeric, i.e.: 5}
  \item{\code{responsiveWidth} - numeric, i.e.: 0}
  \item{\code{responsiveHeight} - numeric, i.e.: 0}
  \item{\code{responsiveExpand} - boolean}
}
}
\examples{
if(interactive()){
library(shiny)

options <- list(
  sectionsColor = c("#4BBFC3", "#7BAABE", "lightgray")
)

ui <- multiPage(
  opts = options,
  menu = c("Multi Scroll" = "multiscroll",
           "Plots" = "plots",
           "Full Section plots" = "fullplots"),
  multiLeft(
    multiSection(
      center = TRUE,
      menu = "multiscroll",
      h1("Multiple")
    ),
    multiSection(
      menu = "plots",
      multiContainer(
        h1("Plot ->"),
        numericInput(
          "max",
          "Maximum",
          min = 50,
          max = 250,
          value = 10
        )
      )
    ),
    multiSectionPlot(
      menu = "fullplots",
      "fullPlot"
    )
  ),
  multiRight(
    multiSection(
      center = TRUE,
      h1("scroll")
    ),
    multiSection(
      center = TRUE,
      plotOutput("plot")
    ),
    multiSection(
      multiContainer(
        center = TRUE,
        h1("<- Full Section plot"),
        sliderInput(
          "number",
          "Data points",
          min = 50,
          max = 250,
          value = 10
        )
      )
    )
  )
)

server <- function(input, output){

  output$plot <- renderPlot({
    hist(rnorm(100, 20, input$max))
  })

  output$fullPlot <- renderPlot({
    par(bg = "gray")
    hist(rnorm(input$number, 20, 250))
  })
}

shinyApp(ui, server)
}

}
